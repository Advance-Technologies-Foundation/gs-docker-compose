version: '3'
networks:
  gs-network:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"
volumes:
  rabbitmq:
    driver: local
  redis:
    driver: local
  postgres:
    driver: local
  pgadmin:
    driver: local
services:

  pgadmin:
    container_name: gs-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "1026:80"
    networks:
      - gs-network

  postgres:
    container_name: gs-postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - gs-network

  rabbitmq:
    container_name: gs-rabbitmq
    image: "rabbitmq:3.6.9-management"
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=gs
      - RABBITMQ_DEFAULT_PASS=gs
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "1027:15672"
    networks:
      - gs-network

  redis:
    container_name: gs-redis
    image: 'bitnami/redis:5.0'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    networks:
      - gs-network

  web-api:
    container_name: gs-web-api
    image: bpmonlinebuild/gs-web-api:local
    environment:
      - DefaultDbTypeColumnValue=${GS_WORKER_DEFAULT_DB_TYPE_COLUMN_VALUE}
      - RequestTimeOut=${GS_REQUEST_TIMEOUT}
      - elasticLogin=user
      - elasticPassword=password
      - elasticSearchUrl=http://ru1-es-bpm.bpmonline.com:9201
      - publicElasticSearchUrl=http://ru1-es-bpm.bpmonline.com:9201
      - connectionStrings__db=${GS_DB_CONNECTION_STRING}
      - connectionStrings__DbType=${GS_COMMON_DB_TYPE}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP}
      - connectionStrings__redis=${GS_REDIS_CONNECTION_STRING}
      - Log4NetPath=log4net.production.config
    ports:
      - "1024:80"
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    build:
      context: ../../../
      dockerfile: ./install/web-api/Dockerfile

  web-indexing-service:
    container_name: gs-web-indexing-service
    image: bpmonlinebuild/gs-web-indexing-service:local
    environment:
      - RabbitConfiguration__RabbitMQUri=${GS_RABBITMQ_AMQP}
      - RabbitConfiguration__ConnectAttempts=${RABBITMQ_CONNECT_ATTEMPTS}
      - RabbitConfiguration__ReconnectInterval=${RABBITMQ_RECONNECT_INTERVAL}
      - RabbitConfiguration__NetworkRecoveryInterval=${RABBITMQ_NETWORK_RECOVERY_INTERVAL}
      - IndexEntityPublisherConfiguration__QueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_TASK}
      - QueriedIndexEntityPublisherConfiguration__QueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_QUERIED_TASK_INBOX}
      - Log4NetPath=log4net.production.config
    ports:
      - "1025:80"
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    build:
      context: ../../../
      dockerfile: ./install/web-indexing-service/Dockerfile

  scheduler:
    container_name: gs-scheduler
    image: bpmonlinebuild/gs-scheduler:local
    environment:
      - DbType=${GS_COMMON_DB_TYPE}
      - DbDialectProvider=${GS_COMMON_DB_DIALECT_PROVIDER}
      - connectionStrings__db=${GS_DB_CONNECTION_STRING}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_INBOX}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_OUTBOX}
      - RabbitMQSettings__FillQueueInterval=${GS_DB_FILL_QUEUE_INTERVAL}
      - Log4NetPath=log4net.production.config
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    build:
      context: ../../../
      dockerfile: ./install/scheduler/Dockerfile

  worker:
    container_name: gs-worker-01
    image: bpmonlinebuild/gs-worker:local
    environment:
      - DbDialectProvider=${GS_WORKER_DB_DIALECT_PROVIDER}
      - elasticLogin=user
      - elasticPassword=password
      - RequestTimeOut=${GS_REQUEST_TIMEOUT}
      - OnSiteClientSettings__ElasticSearchUrl=http://ru1-es-bpm.bpmonline.com:9201
      - connectionStrings__db=${GS_DB_CONNECTION_STRING}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_INBOX}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_OUTBOX}
      - RabbitMQSettings__IncrementDays=${GS_DB_INCREMENT_DAYS}
      - Log4NetPath=log4net.production.config
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    build:
      context: ../../../
      dockerfile: ./install/worker/Dockerfile

  worker-queried-single-task:
    container_name: gs-worker-queried-single-task
    image: bpmonlinebuild/gs-worker-queried-single-task:local
    environment:
      - DbDialectProvider=${GS_WORKER_DB_DIALECT_PROVIDER}
      - elasticLogin=user
      - elasticPassword=password
      - OnSiteClientSettings__ElasticSearchUrl=http://ru1-es-bpm.bpmonline.com:9201
      - RabbitConfiguration__RabbitMQUri=${GS_RABBITMQ_AMQP}
      - RabbitConfiguration__ConnectAttempts=${RABBITMQ_CONNECT_ATTEMPTS}
      - RabbitConfiguration__ReconnectInterval=${RABBITMQ_RECONNECT_INTERVAL}
      - RabbitConfiguration__NetworkRecoveryInterval=${RABBITMQ_NETWORK_RECOVERY_INTERVAL}
      - IndexEntityPublisherConfiguration__QueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_TASK}
      - RabbitConsumerConfiguration__QueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_QUERIED_TASK_INBOX}
      - ElasticScrollConfiguration__ScrollBatchSize=${ES_SCROLL_BATCH_SIZE}
      - ElasticScrollConfiguration__ScrollTimeout=${ES_SCROLL_TIMEOUT}
      - Log4NetPath=log4net.production.config
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    build:
      context: ../../../
      dockerfile: ./install/worker-queried-single-task/Dockerfile

  worker-replay:
    container_name: gs-worker-replay
    image: bpmonlinebuild/gs-worker-replay:local
    environment:
      - DbDialectProvider=${GS_COMMON_DB_DIALECT_PROVIDER}
      - connectionStrings__db=${GS_DB_CONNECTION_STRING}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_INBOX}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_OUTBOX}
      - Log4NetPath=log4net.production.config
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    build:
      context: ../../../
      dockerfile: ./install/worker-replay/Dockerfile

  worker-single:
    container_name: gs-worker-single
    image: bpmonlinebuild/gs-worker-single:local
    environment:
      - DbDialectProvider=${GS_WORKER_DB_DIALECT_PROVIDER}
      - elasticLogin=user
      - elasticPassword=password
      - RequestTimeOut=${GS_REQUEST_TIMEOUT}
      - OnSiteClientSettings__ElasticSearchUrl=http://ru1-es-bpm.bpmonline.com:9201
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_INBOX}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_OUTBOX}
      - Log4NetPath=log4net.production.config
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    build:
      context: ../../../
      dockerfile: ./install/worker-single/Dockerfile

  worker-single-replay:
    container_name: gs-worker-single-replay
    image: bpmonlinebuild/gs-worker-single-replay:local
    environment:
      - DbDialectProvider=${GS_COMMON_DB_DIALECT_PROVIDER}
      - connectionStrings__db=${GS_DB_CONNECTION_STRING}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_INBOX}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_OUTBOX}
      - RabbitMQSettings__IncrementDays=${GS_DB_INCREMENT_DAYS}
      - Log4NetPath=log4net.production.config
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    build:
      context: ../../../
      dockerfile: ./install/worker-single-replay/Dockerfile

  worker-single-task:
    container_name: gs-worker-single-task
    image: bpmonlinebuild/gs-worker-single-task:local
    environment:
      - DbType=${GS_COMMON_DB_TYPE}
      - DbDialectProvider=${GS_COMMON_DB_DIALECT_PROVIDER}
      - connectionStrings__db=${GS_DB_CONNECTION_STRING}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP}
      - connectionStrings__redis=${GS_REDIS_CONNECTION_STRING}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_TASK}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_INBOX}
      - Log4NetPath=log4net.production.config
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    build:
      context: ../../../
      dockerfile: ./install/worker-single-task/Dockerfile
