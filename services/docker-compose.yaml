version: '3'
networks:
  gs-network:
    driver: bridge

volumes:
  rabbitmq:
    driver: local
  redis:
    driver: local
  postgres:
    driver: local
services:

  postgres:
    container_name: gs-postgres
    image: "postgres:11"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    restart: unless-stopped
    volumes:
      - postgres:/data/postgres
    ports:
      - "${POSTGRES_PORT:-50432}:5432"
    networks:
      - gs-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  rabbitmq:
    container_name: gs-rabbitmq
    image: "rabbitmq:3.13.0-management"
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=gs
      - RABBITMQ_DEFAULT_PASS=gs
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "${RABBIT_PORT:-50672}:5672"
      - "5673:5673"
      - "15672:15672"
    restart: unless-stopped
    volumes:
      - "rabbitmq:/var/lib/rabbitmq"
    networks:
      - gs-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  redis:
    container_name: gs-redis
    image: 'bitnami/redis:5.0'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    restart: unless-stopped
    volumes:
      - "redis:/bitnami/redis/data"
    networks:
      - gs-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  web-api:
    container_name: gs-web-api
    image: ${DOCKER_LOGIN:-registry.creatio.com}/gs-web-api:${DOCKER_TAG:-5.0.22-e6a8bf9b}
    environment:
      - RequestTimeOut=${GS_REQUEST_TIMEOUT:-600000}
      - elasticLogin=${GS_ES_LOGIN}
      - elasticPassword=${GS_ES_PASSWORD}
      - elasticSearchUrl=${GS_ES_URL}
      - workerThreads=${GS_WEBAPI_WORKER_THREADS:-200}
      - completionPortThreads=${GS_WEBAPI_COMPLETION_PORT_THREADS:-200}
      - searchServiceUrl=http://${CURRENT_SERVER_IP}:${SEARCH_SERVICE_PORT}
      - connectionStrings__db=${GS_DB_CONNECTION_STRING:-User ID=postgres;Password=postgres;Server=gs-postgres;Port=5432;Database=postgres;Pooling=true;MinPoolSize=0;MaxPoolSize=200}
      - connectionStrings__DbType=${GS_COMMON_DB_TYPE:-postgresql}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP:-amqp://gs:gs@gs-rabbitmq:5672}
      - RedisCacheOptions__ConnectionString=${GS_REDIS_CONNECTION_STRING:-gs-redis:6379,defaultDatabase=1}
      - RedisCacheOptions__ConnectAttempts=${GS_REDIS_CONNECT_ATTEMPTS:-5}
      - RedisCacheOptions__ReconnectInterval=${GS_REDIS_RECONNECT_INTERVAL:-0.00:00:05}
      - RedisCacheOptions__DefaultExpiration=${GS_REDIS_DEFAULT_EXPIRATION:-0.02:00:00}
      - Log4NetPath=${LOG4NET_CONFIG_FILE:-log4net.production.config}
      - IgnoredEntities=${IGNORED_ENTITIES:-VwSysProcessLog,SysPrcHistoryLog,MLModel,MLModelFile,SysSettings,VwWebServiceV2}
      - AuthenticationOptions__UseOAuth=false
    ports:
      - "${WEB_API_PORT}:8080"
    restart: unless-stopped
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  web-indexing-service:
    container_name: gs-web-indexing-service
    image: ${DOCKER_LOGIN:-registry.creatio.com}/gs-web-indexing-service:${DOCKER_TAG:-5.0.22-e6a8bf9b}
    environment:
      - elasticLogin=${GS_ES_LOGIN}
      - elasticPassword=${GS_ES_PASSWORD}
      - elasticSearchUrl=${GS_ES_URL}
      - RabbitConfiguration__RabbitMQUri=${GS_RABBITMQ_AMQP:-amqp://gs:gs@gs-rabbitmq:5672}
      - RabbitConfiguration__ConnectAttempts=${RABBITMQ_CONNECT_ATTEMPTS:-5}
      - RabbitConfiguration__ReconnectInterval=${RABBITMQ_RECONNECT_INTERVAL:-00:00:05}
      - RabbitConfiguration__NetworkRecoveryInterval=${RABBITMQ_NETWORK_RECOVERY_INTERVAL:-00:00:05}
      - RabbitConfiguration__QueuePriorityEnable=${QUEUE_PRIORITY_ENABLE:-false}
      - IndexEntityPublisherConfiguration__QueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_TASK:-gs-single-task}
      - IndexEntityPublisherConfiguration__QueuePriorityEnable=${QUEUE_PRIORITY_ENABLE:-false}
      - QueriedIndexEntityPublisherConfiguration__QueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_QUERIED_TASK_INBOX:-gs-single-queried-task-inbox}
      - QueriedIndexEntityPublisherConfiguration__QueuePriorityEnable=${QUEUE_PRIORITY_ENABLE:-false}
      - Log4NetPath=${LOG4NET_CONFIG_FILE:-log4net.production.config}
      - PublisherPriority__HighPrioritySilencePeriodSec=${PUBLISHER_HIGH_PRIORITY_SILENCE_PERIOD_SEC:-30}
      - PublisherPriority__HighPriorityMaxEntitiesPerSilencePeriod=${PUBLISHER_HIGH_PRIORITY_MAX_ENTITIES_PER_SILENCE_PERIOD:-5}
      - RedisCacheOptions__ConnectionString=${GS_REDIS_CONNECTION_STRING:-gs-redis:6379,defaultDatabase=1}
      - RedisCacheOptions__ConnectAttempts=${GS_REDIS_CONNECT_ATTEMPTS:-5}
      - RedisCacheOptions__ReconnectInterval=${GS_REDIS_RECONNECT_INTERVAL:-0.00:00:05}
      - RedisCacheOptions__DefaultExpiration=${GS_REDIS_DEFAULT_EXPIRATION:-0.02:00:00}
      - workerThreads=${GS_INDEXING_SERVICE_WORKER_THREADS:-200}
      - completionPortThreads=${GS_INDEXING_SERVICE_COMPLETION_PORT_THREADS:-200}
    ports:
      - "${WEB_INDEXING_SERVICE_PORT}:8080"
    restart: unless-stopped
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  search-service:
    container_name: gs-search-service
    image: ${DOCKER_LOGIN:-registry.creatio.com}/gs-search-service:${DOCKER_TAG:-5.0.22-e6a8bf9b}
    environment:
      - ElasticSearch__Url=${GS_ES_URL}
      - ElasticSearch__Login=${GS_ES_LOGIN}
      - ElasticSearch__Password=${GS_ES_PASSWORD}
      - ElasticSearch__TraceDebugInfo=${GS_ES_TRACE_DEBUG_INFO:-false}
      - Log4NetPath=${LOG4NET_CONFIG_FILE:-log4net.production.config}
      - AuthenticationOptions__UseOAuth=false
      - WebAppUrl=http://gs-web-api:8080
    ports:
      - "${SEARCH_SERVICE_PORT}:8080"
    restart: unless-stopped
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  scheduler:
    container_name: gs-scheduler
    image: ${DOCKER_LOGIN:-registry.creatio.com}/gs-scheduler:${DOCKER_TAG:-5.0.22-e6a8bf9b}
    environment:
      - DbType=${GS_COMMON_DB_TYPE:-postgresql}
      - DbDialectProvider=${GS_COMMON_DB_DIALECT_PROVIDER:-ServiceStack.OrmLite.PostgreSqlDialect, ServiceStack.OrmLite.PostgreSQL, Culture=neutral, PublicKeyToken=null}
      - connectionStrings__db=${GS_DB_CONNECTION_STRING:-User ID=postgres;Password=postgres;Server=gs-postgres;Port=5432;Database=postgres;Pooling=true;MinPoolSize=0;MaxPoolSize=200}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP:-amqp://gs:gs@gs-rabbitmq:5672}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_INBOX:-gs-inbox}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_OUTBOX:-gs-outbox}
      - RabbitMQSettings__FillQueueInterval=${GS_DB_FILL_QUEUE_INTERVAL:-30000}
      - RabbitMQSettings__QueuePriorityEnable=${QUEUE_PRIORITY_ENABLE:-false}
      - Log4NetPath=${LOG4NET_CONFIG_FILE:-log4net.production.config}
    restart: unless-stopped
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  worker:
    container_name: gs-worker-01
    image: ${DOCKER_LOGIN:-registry.creatio.com}/gs-worker:${DOCKER_TAG:-5.0.22-e6a8bf9b}
    environment:
      - elasticLogin=${GS_ES_LOGIN}
      - elasticPassword=${GS_ES_PASSWORD}
      - RequestTimeOut=${GS_REQUEST_TIMEOUT:-600000}
      - IndexingContentLength=${GS_INDEXING_CONTENT_LENGTH:-500}
      - OnSiteClientSettings__ElasticSearchUrl=${GS_ES_URL}
      - connectionStrings__db=${GS_DB_CONNECTION_STRING:-User ID=postgres;Password=postgres;Server=gs-postgres;Port=5432;Database=postgres;Pooling=true;MinPoolSize=0;MaxPoolSize=200}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP:-amqp://gs:gs@gs-rabbitmq:5672}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_INBOX:-gs-inbox}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_OUTBOX:-gs-outbox}
      - RabbitMQSettings__IncrementDays=${GS_DB_INCREMENT_DAYS:-500}
      - RabbitMQSettings__QueuePriorityEnable=${QUEUE_PRIORITY_ENABLE:-false}
      - Log4NetPath=${LOG4NET_CONFIG_FILE:-log4net.production.config}
      - TraceDebugInfo=${GS_ES_TRACE_DEBUG_INFO:-false}
    restart: unless-stopped
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  worker-queried-single-task:
    container_name: gs-worker-queried-single-task
    image: ${DOCKER_LOGIN:-registry.creatio.com}/gs-worker-queried-single-task:${DOCKER_TAG:-5.0.22-e6a8bf9b}
    environment:
      - elasticLogin=${GS_ES_LOGIN}
      - elasticPassword=${GS_ES_PASSWORD}
      - OnSiteClientSettings__ElasticSearchUrl=${GS_ES_URL}
      - RabbitConfiguration__RabbitMQUri=${GS_RABBITMQ_AMQP:-amqp://gs:gs@gs-rabbitmq:5672}
      - RabbitConfiguration__ConnectAttempts=${RABBITMQ_CONNECT_ATTEMPTS:-5}
      - RabbitConfiguration__ReconnectInterval=${RABBITMQ_RECONNECT_INTERVAL:-00:00:05}
      - RabbitConfiguration__NetworkRecoveryInterval=${RABBITMQ_NETWORK_RECOVERY_INTERVAL:-00:00:05}
      - RabbitConfiguration__QueuePriorityEnable=${QUEUE_PRIORITY_ENABLE:-false}
      - IndexEntityPublisherConfiguration__QueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_TASK:-gs-single-task}
      - RabbitConsumerConfiguration__QueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_QUERIED_TASK_INBOX:-gs-single-queried-task-inbox}
      - ElasticScrollConfiguration__ScrollBatchSize=${ES_SCROLL_BATCH_SIZE:-1000}
      - ElasticScrollConfiguration__ScrollTimeout=${ES_SCROLL_TIMEOUT:-60000}
      - Log4NetPath=l${LOG4NET_CONFIG_FILE:-log4net.production.config}
    restart: unless-stopped
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  worker-replay:
    container_name: gs-worker-replay
    image: ${DOCKER_LOGIN:-registry.creatio.com}/gs-worker-replay:${DOCKER_TAG:-5.0.22-e6a8bf9b}
    environment:
      - DbDialectProvider=${GS_COMMON_DB_DIALECT_PROVIDER:-ServiceStack.OrmLite.PostgreSqlDialect, ServiceStack.OrmLite.PostgreSQL, Culture=neutral, PublicKeyToken=null}
      - connectionStrings__db=${GS_DB_CONNECTION_STRING:-User ID=postgres;Password=postgres;Server=gs-postgres;Port=5432;Database=postgres;Pooling=true;MinPoolSize=0;MaxPoolSize=200}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP:-amqp://gs:gs@gs-rabbitmq:5672}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_INBOX:-gs-inbox}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_OUTBOX:-gs-outbox}
      - RabbitMQSettings__QueuePriorityEnable=${QUEUE_PRIORITY_ENABLE:-false}
      - Log4NetPath=${LOG4NET_CONFIG_FILE:-log4net.production.config}
    restart: unless-stopped
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  worker-single:
    container_name: gs-worker-single
    image: ${DOCKER_LOGIN:-registry.creatio.com}/gs-worker-single:${DOCKER_TAG:-5.0.22-e6a8bf9b}
    environment:
      - elasticLogin=${GS_ES_LOGIN}
      - elasticPassword=${GS_ES_PASSWORD}
      - RequestTimeOut=${GS_REQUEST_TIMEOUT:-600000}
      - IndexingContentLength=${GS_INDEXING_CONTENT_LENGTH:-500}
      - OnSiteClientSettings__ElasticSearchUrl=${GS_ES_URL}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP:-amqp://gs:gs@gs-rabbitmq:5672}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_INBOX:-gs-single-inbox}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_OUTBOX:-gs-single-outbox}
      - RabbitMQSettings__QueuePriorityEnable=${QUEUE_PRIORITY_ENABLE:-false}
      - Log4NetPath=${LOG4NET_CONFIG_FILE:-log4net.production.config}
      - TraceDebugInfo=${GS_ES_TRACE_DEBUG_INFO:-false}
    restart: unless-stopped
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  worker-single-replay:
    container_name: gs-worker-single-replay
    image: ${DOCKER_LOGIN:-registry.creatio.com}/gs-worker-single-replay:${DOCKER_TAG:-5.0.22-e6a8bf9b}
    environment:
      - DbDialectProvider=${GS_COMMON_DB_DIALECT_PROVIDER:-ServiceStack.OrmLite.PostgreSqlDialect, ServiceStack.OrmLite.PostgreSQL, Culture=neutral, PublicKeyToken=null}
      - connectionStrings__db=${GS_DB_CONNECTION_STRING:-User ID=postgres;Password=postgres;Server=gs-postgres;Port=5432;Database=postgres;Pooling=true;MinPoolSize=0;MaxPoolSize=200}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP:-amqp://gs:gs@gs-rabbitmq:5672}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_INBOX:-gs-single-inbox}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_OUTBOX:-gs-single-outbox}
      - RabbitMQSettings__IncrementDays=${GS_DB_INCREMENT_DAYS:-500}
      - RabbitMQSettings__QueuePriorityEnable=${QUEUE_PRIORITY_ENABLE:-false}
      - Log4NetPath=${LOG4NET_CONFIG_FILE:-log4net.production.config}
    restart: unless-stopped
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"

  worker-single-task:
    container_name: gs-worker-single-task
    image: ${DOCKER_LOGIN:-registry.creatio.com}/gs-worker-single-task:${DOCKER_TAG:-5.0.22-e6a8bf9b}
    environment:
      - DbType=${GS_COMMON_DB_TYPE:-postgresql}
      - DbDialectProvider=${GS_COMMON_DB_DIALECT_PROVIDER:-ServiceStack.OrmLite.PostgreSqlDialect, ServiceStack.OrmLite.PostgreSQL, Culture=neutral, PublicKeyToken=null}
      - connectionStrings__db=${GS_DB_CONNECTION_STRING:-User ID=postgres;Password=postgres;Server=gs-postgres;Port=5432;Database=postgres;Pooling=true;MinPoolSize=0;MaxPoolSize=200}
      - connectionStrings__RabbitMQ=${GS_RABBITMQ_AMQP:-amqp://gs:gs@gs-rabbitmq:5672}
      - RedisCacheOptions__ConnectionString=${GS_REDIS_CONNECTION_STRING:-gs-redis:6379,defaultDatabase=1}
      - RedisCacheOptions__ConnectAttempts=${GS_REDIS_CONNECT_ATTEMPTS:-5}
      - RedisCacheOptions__ReconnectInterval=${GS_REDIS_RECONNECT_INTERVAL:-0.00:00:05}
      - RedisCacheOptions__DefaultExpiration=${GS_REDIS_DEFAULT_EXPIRATION:-0.02:00:00}
      - RabbitMQSettings__RabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_TASK:-gs-single-task}
      - RabbitMQSettings__ReplyRabbitQueueName=${GS_RABBITMQ_QUEUE_NAME_SINGLE_INBOX:-gs-single-inbox}
      - RabbitMQSettings__QueuePriorityEnable=${QUEUE_PRIORITY_ENABLE:-false}
      - Log4NetPath=${LOG4NET_CONFIG_FILE:-log4net.production.config}
    restart: unless-stopped
    networks:
      - gs-network
    depends_on:
      - redis
      - postgres
      - rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "5"
